<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cpt202.mapper.CategoryMapper">

    <sql id="Base_Column_List">
        id, name, description, create_time, update_time
    </sql>

    <insert id="insert" parameterType="com.cpt202.domain.Category">
        INSERT INTO category (name, description, create_time, update_time)
        VALUES (#{name}, #{description}, #{createTime}, #{updateTime})
    </insert>

    <delete id="deleteById" parameterType="Integer">
        DELETE FROM category WHERE id = #{id}
    </delete>

    <delete id="deleteBatch" parameterType="java.util.List">
        DELETE FROM category WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateById" parameterType="com.cpt202.domain.Category">
        UPDATE category
        SET name = #{name}, description = #{description}, update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <select id="selectById" parameterType="Integer" resultType="com.cpt202.domain.Category">
        SELECT * FROM category WHERE id = #{id}
    </select>

    <select id="selectAll" resultType="com.cpt202.domain.Category">
        SELECT
        <include refid="Base_Column_List" />
        FROM category
        <where>
            <if test="name != null"> AND name LIKE CONCAT('%', #{name}, '%')</if>
            <if test="description != null"> AND description LIKE CONCAT('%', #{description}, '%')</if>
            <if test="createTime != null"> AND create_time = #{createTime}</if>
            <if test="updateTime != null"> AND update_time = #{updateTime}</if>
        </where>
    </select>

    <select id="selectNamesByIds" resultType="java.lang.String">
        SELECT name 
        FROM category
        WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <select id="selectCategoriesByUserId" resultType="com.cpt202.domain.Category">
        SELECT DISTINCT
            c.id, c.name, c.description, c.create_time, c.update_time
        FROM 
            category c
        INNER JOIN 
            song_category sc ON c.id = sc.category_id
        INNER JOIN 
            song s ON sc.song_id = s.id
        WHERE 
            s.user_id = #{userId}
    </select>

    <!-- Finds the category with the most songs -->
    <select id="findTopCategoryBySongCount" resultType="com.cpt202.dto.TopCategoryDto">
        SELECT
            c.name AS categoryName,
            COUNT(sc.song_id) AS songCount
        FROM
            category c  -- Assuming category table name is 'category'
        JOIN
            song_category sc ON c.id = sc.category_id -- Assuming linking table is 'song_category' and columns are 'id', 'category_id', 'song_id'
        GROUP BY
            c.id, c.name
        ORDER BY
            songCount DESC
        LIMIT 1;
    </select>

</mapper>